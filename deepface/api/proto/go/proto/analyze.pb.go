// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v5.29.3
// source: analyze.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AnalyzeRequest_Action int32

const (
	AnalyzeRequest_AGE     AnalyzeRequest_Action = 0
	AnalyzeRequest_GENDER  AnalyzeRequest_Action = 1
	AnalyzeRequest_EMOTION AnalyzeRequest_Action = 2
	AnalyzeRequest_RACE    AnalyzeRequest_Action = 3
)

// Enum value maps for AnalyzeRequest_Action.
var (
	AnalyzeRequest_Action_name = map[int32]string{
		0: "AGE",
		1: "GENDER",
		2: "EMOTION",
		3: "RACE",
	}
	AnalyzeRequest_Action_value = map[string]int32{
		"AGE":     0,
		"GENDER":  1,
		"EMOTION": 2,
		"RACE":    3,
	}
)

func (x AnalyzeRequest_Action) Enum() *AnalyzeRequest_Action {
	p := new(AnalyzeRequest_Action)
	*p = x
	return p
}

func (x AnalyzeRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnalyzeRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_analyze_proto_enumTypes[0].Descriptor()
}

func (AnalyzeRequest_Action) Type() protoreflect.EnumType {
	return &file_analyze_proto_enumTypes[0]
}

func (x AnalyzeRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnalyzeRequest_Action.Descriptor instead.
func (AnalyzeRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_analyze_proto_rawDescGZIP(), []int{0, 0}
}

type AnalyzeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image            []byte                  `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Actions          []AnalyzeRequest_Action `protobuf:"varint,2,rep,packed,name=actions,proto3,enum=deepface.api.proto.AnalyzeRequest_Action" json:"actions,omitempty"` // Actions to perform, e.g., "age", "gender", "emotion", "race"
	DetectorBackend  *Detectors              `protobuf:"varint,3,opt,name=detector_backend,json=detectorBackend,proto3,enum=deepface.api.proto.Detectors,oneof" json:"detector_backend,omitempty"`
	EnforceDetection *bool                   `protobuf:"varint,4,opt,name=enforce_detection,json=enforceDetection,proto3,oneof" json:"enforce_detection,omitempty"`
	Align            *bool                   `protobuf:"varint,5,opt,name=align,proto3,oneof" json:"align,omitempty"`
	AntiSpoofing     *bool                   `protobuf:"varint,6,opt,name=anti_spoofing,json=antiSpoofing,proto3,oneof" json:"anti_spoofing,omitempty"`
}

func (x *AnalyzeRequest) Reset() {
	*x = AnalyzeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyze_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeRequest) ProtoMessage() {}

func (x *AnalyzeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_analyze_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeRequest) Descriptor() ([]byte, []int) {
	return file_analyze_proto_rawDescGZIP(), []int{0}
}

func (x *AnalyzeRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *AnalyzeRequest) GetActions() []AnalyzeRequest_Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *AnalyzeRequest) GetDetectorBackend() Detectors {
	if x != nil && x.DetectorBackend != nil {
		return *x.DetectorBackend
	}
	return Detectors_OPENCV
}

func (x *AnalyzeRequest) GetEnforceDetection() bool {
	if x != nil && x.EnforceDetection != nil {
		return *x.EnforceDetection
	}
	return false
}

func (x *AnalyzeRequest) GetAlign() bool {
	if x != nil && x.Align != nil {
		return *x.Align
	}
	return false
}

func (x *AnalyzeRequest) GetAntiSpoofing() bool {
	if x != nil && x.AntiSpoofing != nil {
		return *x.AntiSpoofing
	}
	return false
}

type AnalyzeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*AnalyzeResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *AnalyzeResponse) Reset() {
	*x = AnalyzeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyze_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse) ProtoMessage() {}

func (x *AnalyzeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_analyze_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse) Descriptor() ([]byte, []int) {
	return file_analyze_proto_rawDescGZIP(), []int{1}
}

func (x *AnalyzeResponse) GetResults() []*AnalyzeResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type AnalyzeResponse_Emotion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angry    float64 `protobuf:"fixed64,1,opt,name=angry,proto3" json:"angry,omitempty"`
	Disgust  float64 `protobuf:"fixed64,2,opt,name=disgust,proto3" json:"disgust,omitempty"`
	Fear     float64 `protobuf:"fixed64,3,opt,name=fear,proto3" json:"fear,omitempty"`
	Happy    float64 `protobuf:"fixed64,4,opt,name=happy,proto3" json:"happy,omitempty"`
	Neutral  float64 `protobuf:"fixed64,5,opt,name=neutral,proto3" json:"neutral,omitempty"`
	Sad      float64 `protobuf:"fixed64,6,opt,name=sad,proto3" json:"sad,omitempty"`
	Surprise float64 `protobuf:"fixed64,7,opt,name=surprise,proto3" json:"surprise,omitempty"`
}

func (x *AnalyzeResponse_Emotion) Reset() {
	*x = AnalyzeResponse_Emotion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyze_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResponse_Emotion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse_Emotion) ProtoMessage() {}

func (x *AnalyzeResponse_Emotion) ProtoReflect() protoreflect.Message {
	mi := &file_analyze_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse_Emotion.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse_Emotion) Descriptor() ([]byte, []int) {
	return file_analyze_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AnalyzeResponse_Emotion) GetAngry() float64 {
	if x != nil {
		return x.Angry
	}
	return 0
}

func (x *AnalyzeResponse_Emotion) GetDisgust() float64 {
	if x != nil {
		return x.Disgust
	}
	return 0
}

func (x *AnalyzeResponse_Emotion) GetFear() float64 {
	if x != nil {
		return x.Fear
	}
	return 0
}

func (x *AnalyzeResponse_Emotion) GetHappy() float64 {
	if x != nil {
		return x.Happy
	}
	return 0
}

func (x *AnalyzeResponse_Emotion) GetNeutral() float64 {
	if x != nil {
		return x.Neutral
	}
	return 0
}

func (x *AnalyzeResponse_Emotion) GetSad() float64 {
	if x != nil {
		return x.Sad
	}
	return 0
}

func (x *AnalyzeResponse_Emotion) GetSurprise() float64 {
	if x != nil {
		return x.Surprise
	}
	return 0
}

type AnalyzeResponse_Gender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Man   float64 `protobuf:"fixed64,1,opt,name=man,proto3" json:"man,omitempty"`
	Woman float64 `protobuf:"fixed64,2,opt,name=woman,proto3" json:"woman,omitempty"`
}

func (x *AnalyzeResponse_Gender) Reset() {
	*x = AnalyzeResponse_Gender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyze_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResponse_Gender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse_Gender) ProtoMessage() {}

func (x *AnalyzeResponse_Gender) ProtoReflect() protoreflect.Message {
	mi := &file_analyze_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse_Gender.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse_Gender) Descriptor() ([]byte, []int) {
	return file_analyze_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AnalyzeResponse_Gender) GetMan() float64 {
	if x != nil {
		return x.Man
	}
	return 0
}

func (x *AnalyzeResponse_Gender) GetWoman() float64 {
	if x != nil {
		return x.Woman
	}
	return 0
}

type AnalyzeResponse_Race struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asian          float64 `protobuf:"fixed64,1,opt,name=asian,proto3" json:"asian,omitempty"`
	Black          float64 `protobuf:"fixed64,2,opt,name=black,proto3" json:"black,omitempty"`
	Indian         float64 `protobuf:"fixed64,3,opt,name=indian,proto3" json:"indian,omitempty"`
	LatinoHispanic float64 `protobuf:"fixed64,4,opt,name=latino_hispanic,json=latinoHispanic,proto3" json:"latino_hispanic,omitempty"`
	MiddleEastern  float64 `protobuf:"fixed64,5,opt,name=middle_eastern,json=middleEastern,proto3" json:"middle_eastern,omitempty"`
	White          float64 `protobuf:"fixed64,6,opt,name=white,proto3" json:"white,omitempty"`
}

func (x *AnalyzeResponse_Race) Reset() {
	*x = AnalyzeResponse_Race{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyze_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResponse_Race) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse_Race) ProtoMessage() {}

func (x *AnalyzeResponse_Race) ProtoReflect() protoreflect.Message {
	mi := &file_analyze_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse_Race.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse_Race) Descriptor() ([]byte, []int) {
	return file_analyze_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AnalyzeResponse_Race) GetAsian() float64 {
	if x != nil {
		return x.Asian
	}
	return 0
}

func (x *AnalyzeResponse_Race) GetBlack() float64 {
	if x != nil {
		return x.Black
	}
	return 0
}

func (x *AnalyzeResponse_Race) GetIndian() float64 {
	if x != nil {
		return x.Indian
	}
	return 0
}

func (x *AnalyzeResponse_Race) GetLatinoHispanic() float64 {
	if x != nil {
		return x.LatinoHispanic
	}
	return 0
}

func (x *AnalyzeResponse_Race) GetMiddleEastern() float64 {
	if x != nil {
		return x.MiddleEastern
	}
	return 0
}

func (x *AnalyzeResponse_Race) GetWhite() float64 {
	if x != nil {
		return x.White
	}
	return 0
}

type AnalyzeResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age             uint32                   `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	DominantEmotion string                   `protobuf:"bytes,2,opt,name=dominant_emotion,json=dominantEmotion,proto3" json:"dominant_emotion,omitempty"`
	DominantGender  string                   `protobuf:"bytes,3,opt,name=dominant_gender,json=dominantGender,proto3" json:"dominant_gender,omitempty"`
	DominantRace    string                   `protobuf:"bytes,4,opt,name=dominant_race,json=dominantRace,proto3" json:"dominant_race,omitempty"`
	FaceConfidence  float64                  `protobuf:"fixed64,5,opt,name=face_confidence,json=faceConfidence,proto3" json:"face_confidence,omitempty"`
	Emotion         *AnalyzeResponse_Emotion `protobuf:"bytes,6,opt,name=emotion,proto3" json:"emotion,omitempty"`
	Gender          *AnalyzeResponse_Gender  `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender,omitempty"`
	Race            *AnalyzeResponse_Race    `protobuf:"bytes,8,opt,name=race,proto3" json:"race,omitempty"`
	FacialArea      *FacialArea              `protobuf:"bytes,9,opt,name=facial_area,json=facialArea,proto3" json:"facial_area,omitempty"`
}

func (x *AnalyzeResponse_Result) Reset() {
	*x = AnalyzeResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyze_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResponse_Result) ProtoMessage() {}

func (x *AnalyzeResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_analyze_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResponse_Result.ProtoReflect.Descriptor instead.
func (*AnalyzeResponse_Result) Descriptor() ([]byte, []int) {
	return file_analyze_proto_rawDescGZIP(), []int{1, 3}
}

func (x *AnalyzeResponse_Result) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *AnalyzeResponse_Result) GetDominantEmotion() string {
	if x != nil {
		return x.DominantEmotion
	}
	return ""
}

func (x *AnalyzeResponse_Result) GetDominantGender() string {
	if x != nil {
		return x.DominantGender
	}
	return ""
}

func (x *AnalyzeResponse_Result) GetDominantRace() string {
	if x != nil {
		return x.DominantRace
	}
	return ""
}

func (x *AnalyzeResponse_Result) GetFaceConfidence() float64 {
	if x != nil {
		return x.FaceConfidence
	}
	return 0
}

func (x *AnalyzeResponse_Result) GetEmotion() *AnalyzeResponse_Emotion {
	if x != nil {
		return x.Emotion
	}
	return nil
}

func (x *AnalyzeResponse_Result) GetGender() *AnalyzeResponse_Gender {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *AnalyzeResponse_Result) GetRace() *AnalyzeResponse_Race {
	if x != nil {
		return x.Race
	}
	return nil
}

func (x *AnalyzeResponse_Result) GetFacialArea() *FacialArea {
	if x != nil {
		return x.FacialArea
	}
	return nil
}

var File_analyze_proto protoreflect.FileDescriptor

var file_analyze_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x64, 0x65, 0x65, 0x70, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xae, 0x03, 0x0a, 0x0e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x64, 0x65,
	0x65, 0x70, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x4d, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x65, 0x70,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x11, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x10, 0x65, 0x6e, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x02, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x61,
	0x6e, 0x74, 0x69, 0x5f, 0x73, 0x70, 0x6f, 0x6f, 0x66, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x03, 0x52, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x53, 0x70, 0x6f, 0x6f, 0x66, 0x69,
	0x6e, 0x67, 0x88, 0x01, 0x01, 0x22, 0x34, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x45, 0x4e, 0x44,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41, 0x43, 0x45, 0x10, 0x03, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x6c, 0x69, 0x67, 0x6e,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x6e, 0x74, 0x69, 0x5f, 0x73, 0x70, 0x6f, 0x6f, 0x66, 0x69,
	0x6e, 0x67, 0x22, 0xb3, 0x07, 0x0a, 0x0f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xab, 0x01, 0x0a,
	0x07, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x67, 0x75, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x67, 0x75, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x68, 0x61, 0x70, 0x70, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x68, 0x61, 0x70,
	0x70, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x61, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x1a, 0x30, 0x0a, 0x06, 0x47, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6d, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x6d, 0x61, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x6f, 0x6d, 0x61, 0x6e, 0x1a, 0xb0, 0x01, 0x0a,
	0x04, 0x52, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x69, 0x61, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x73, 0x69, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x61, 0x74,
	0x69, 0x6e, 0x6f, 0x5f, 0x68, 0x69, 0x73, 0x70, 0x61, 0x6e, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x6f, 0x48, 0x69, 0x73, 0x70, 0x61, 0x6e,
	0x69, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x65, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6d, 0x69, 0x64, 0x64,
	0x6c, 0x65, 0x45, 0x61, 0x73, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x68, 0x69, 0x74, 0x65, 0x1a,
	0xc6, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74,
	0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x6f, 0x6d, 0x69, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e,
	0x66, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x45,
	0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x61, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x61, 0x63,
	0x65, 0x52, 0x04, 0x72, 0x61, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x61,
	0x6c, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64,
	0x65, 0x65, 0x70, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x52, 0x0a, 0x66, 0x61,
	0x63, 0x69, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x32, 0x64, 0x0a, 0x0e, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12, 0x22, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x65, 0x65, 0x70,
	0x66, 0x61, 0x63, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x28,
	0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x72,
	0x65, 0x6e, 0x67, 0x69, 0x6c, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_analyze_proto_rawDescOnce sync.Once
	file_analyze_proto_rawDescData = file_analyze_proto_rawDesc
)

func file_analyze_proto_rawDescGZIP() []byte {
	file_analyze_proto_rawDescOnce.Do(func() {
		file_analyze_proto_rawDescData = protoimpl.X.CompressGZIP(file_analyze_proto_rawDescData)
	})
	return file_analyze_proto_rawDescData
}

var file_analyze_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_analyze_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_analyze_proto_goTypes = []interface{}{
	(AnalyzeRequest_Action)(0),      // 0: deepface.api.proto.AnalyzeRequest.Action
	(*AnalyzeRequest)(nil),          // 1: deepface.api.proto.AnalyzeRequest
	(*AnalyzeResponse)(nil),         // 2: deepface.api.proto.AnalyzeResponse
	(*AnalyzeResponse_Emotion)(nil), // 3: deepface.api.proto.AnalyzeResponse.Emotion
	(*AnalyzeResponse_Gender)(nil),  // 4: deepface.api.proto.AnalyzeResponse.Gender
	(*AnalyzeResponse_Race)(nil),    // 5: deepface.api.proto.AnalyzeResponse.Race
	(*AnalyzeResponse_Result)(nil),  // 6: deepface.api.proto.AnalyzeResponse.Result
	(Detectors)(0),                  // 7: deepface.api.proto.Detectors
	(*FacialArea)(nil),              // 8: deepface.api.proto.FacialArea
}
var file_analyze_proto_depIdxs = []int32{
	0, // 0: deepface.api.proto.AnalyzeRequest.actions:type_name -> deepface.api.proto.AnalyzeRequest.Action
	7, // 1: deepface.api.proto.AnalyzeRequest.detector_backend:type_name -> deepface.api.proto.Detectors
	6, // 2: deepface.api.proto.AnalyzeResponse.results:type_name -> deepface.api.proto.AnalyzeResponse.Result
	3, // 3: deepface.api.proto.AnalyzeResponse.Result.emotion:type_name -> deepface.api.proto.AnalyzeResponse.Emotion
	4, // 4: deepface.api.proto.AnalyzeResponse.Result.gender:type_name -> deepface.api.proto.AnalyzeResponse.Gender
	5, // 5: deepface.api.proto.AnalyzeResponse.Result.race:type_name -> deepface.api.proto.AnalyzeResponse.Race
	8, // 6: deepface.api.proto.AnalyzeResponse.Result.facial_area:type_name -> deepface.api.proto.FacialArea
	1, // 7: deepface.api.proto.AnalyzeService.Analyze:input_type -> deepface.api.proto.AnalyzeRequest
	2, // 8: deepface.api.proto.AnalyzeService.Analyze:output_type -> deepface.api.proto.AnalyzeResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_analyze_proto_init() }
func file_analyze_proto_init() {
	if File_analyze_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_analyze_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analyze_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analyze_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResponse_Emotion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analyze_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResponse_Gender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analyze_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResponse_Race); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analyze_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_analyze_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analyze_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analyze_proto_goTypes,
		DependencyIndexes: file_analyze_proto_depIdxs,
		EnumInfos:         file_analyze_proto_enumTypes,
		MessageInfos:      file_analyze_proto_msgTypes,
	}.Build()
	File_analyze_proto = out.File
	file_analyze_proto_rawDesc = nil
	file_analyze_proto_goTypes = nil
	file_analyze_proto_depIdxs = nil
}
